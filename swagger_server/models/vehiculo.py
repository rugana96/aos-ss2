# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
import re  # noqa: F401,E501
from swagger_server import util


class Vehiculo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, client_id: int=None, matricula: str=None, marca: str=None, modelo: str=None, color: str=None, ao: float=None, vin: str=None):  # noqa: E501
        """Vehiculo - a model defined in Swagger

        :param id: The id of this Vehiculo.  # noqa: E501
        :type id: int
        :param client_id: The client_id of this Vehiculo.  # noqa: E501
        :type client_id: int
        :param matricula: The matricula of this Vehiculo.  # noqa: E501
        :type matricula: str
        :param marca: The marca of this Vehiculo.  # noqa: E501
        :type marca: str
        :param modelo: The modelo of this Vehiculo.  # noqa: E501
        :type modelo: str
        :param color: The color of this Vehiculo.  # noqa: E501
        :type color: str
        :param ao: The ao of this Vehiculo.  # noqa: E501
        :type ao: float
        :param vin: The vin of this Vehiculo.  # noqa: E501
        :type vin: str
        """
        self.swagger_types = {
            'id': int,
            'client_id': int,
            'matricula': str,
            'marca': str,
            'modelo': str,
            'color': str,
            'ao': float,
            'vin': str
        }

        self.attribute_map = {
            'id': 'id',
            'client_id': 'clientId',
            'matricula': 'matricula',
            'marca': 'marca',
            'modelo': 'modelo',
            'color': 'color',
            'ao': 'año',
            'vin': 'VIN'
        }
        self._id = id
        self._client_id = client_id
        self._matricula = matricula
        self._marca = marca
        self._modelo = modelo
        self._color = color
        self._ao = ao
        self._vin = vin

    @classmethod
    def from_dict(cls, dikt) -> 'Vehiculo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Vehiculo of this Vehiculo.  # noqa: E501
        :rtype: Vehiculo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Vehiculo.

        Identificador único del vehículo.  # noqa: E501

        :return: The id of this Vehiculo.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Vehiculo.

        Identificador único del vehículo.  # noqa: E501

        :param id: The id of this Vehiculo.
        :type id: int
        """

        self._id = id

    @property
    def client_id(self) -> int:
        """Gets the client_id of this Vehiculo.

        Identificador único del cliente que haya llevado el vehículo al taller.  # noqa: E501

        :return: The client_id of this Vehiculo.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id: int):
        """Sets the client_id of this Vehiculo.

        Identificador único del cliente que haya llevado el vehículo al taller.  # noqa: E501

        :param client_id: The client_id of this Vehiculo.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def matricula(self) -> str:
        """Gets the matricula of this Vehiculo.

        Matrícula del vehículo.  # noqa: E501

        :return: The matricula of this Vehiculo.
        :rtype: str
        """
        return self._matricula

    @matricula.setter
    def matricula(self, matricula: str):
        """Sets the matricula of this Vehiculo.

        Matrícula del vehículo.  # noqa: E501

        :param matricula: The matricula of this Vehiculo.
        :type matricula: str
        """

        self._matricula = matricula

    @property
    def marca(self) -> str:
        """Gets the marca of this Vehiculo.

        Marca del vehículo.  # noqa: E501

        :return: The marca of this Vehiculo.
        :rtype: str
        """
        return self._marca

    @marca.setter
    def marca(self, marca: str):
        """Sets the marca of this Vehiculo.

        Marca del vehículo.  # noqa: E501

        :param marca: The marca of this Vehiculo.
        :type marca: str
        """

        self._marca = marca

    @property
    def modelo(self) -> str:
        """Gets the modelo of this Vehiculo.

        Modelo del vehículo.  # noqa: E501

        :return: The modelo of this Vehiculo.
        :rtype: str
        """
        return self._modelo

    @modelo.setter
    def modelo(self, modelo: str):
        """Sets the modelo of this Vehiculo.

        Modelo del vehículo.  # noqa: E501

        :param modelo: The modelo of this Vehiculo.
        :type modelo: str
        """

        self._modelo = modelo

    @property
    def color(self) -> str:
        """Gets the color of this Vehiculo.

        Color del vehículo.  # noqa: E501

        :return: The color of this Vehiculo.
        :rtype: str
        """
        return self._color

    @color.setter
    def color(self, color: str):
        """Sets the color of this Vehiculo.

        Color del vehículo.  # noqa: E501

        :param color: The color of this Vehiculo.
        :type color: str
        """

        self._color = color

    @property
    def ao(self) -> float:
        """Gets the ao of this Vehiculo.

        Año de fabricación del vehículo.  # noqa: E501

        :return: The ao of this Vehiculo.
        :rtype: float
        """
        return self._ao

    @ao.setter
    def ao(self, ao: float):
        """Sets the ao of this Vehiculo.

        Año de fabricación del vehículo.  # noqa: E501

        :param ao: The ao of this Vehiculo.
        :type ao: float
        """

        self._ao = ao

    @property
    def vin(self) -> str:
        """Gets the vin of this Vehiculo.

        Número de identificación del vehículo (Vehicle Identification Number).  # noqa: E501

        :return: The vin of this Vehiculo.
        :rtype: str
        """
        return self._vin

    @vin.setter
    def vin(self, vin: str):
        """Sets the vin of this Vehiculo.

        Número de identificación del vehículo (Vehicle Identification Number).  # noqa: E501

        :param vin: The vin of this Vehiculo.
        :type vin: str
        """

        self._vin = vin
